#version: '3.8'
#
#services:
#  mysql:
#    image: mysql:5.7
#    container_name: mysql
#    environment:
#      MYSQL_DATABASE: BloodBank
#      MYSQL_USER: root
#      MYSQL_PASSWORD: HA1256ri#
#      MYSQL_ROOT_PASSWORD: HA1256ri#
#    ports:
#      - "3307:3306"  # Change host port to 3307
#    volumes:
#      - mysql-data:/var/lib/mysql
#
#  app:
#    build: .
#    container_name: spring_app
#    ports:
#      - "8080:8080"
#    depends_on:
#      - mysql
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/BloodBank  # Container port remains 3306
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: HA1256ri#
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#
#volumes:
#  mysql-data:
#version: '3.8'
#
#services:
#  mysql:
#    image: mysql:5.7
#    container_name: mysql
#    environment:
#      MYSQL_DATABASE: BloodBank
#      MYSQL_ROOT_PASSWORD: HA1256ri#
#    ports:
#      - "3307:3306"
#    volumes:
#      - mysql-data:/var/lib/mysql
#
#  app:
#    build: .
#    container_name: spring_app
#    ports:
#      - "8080:8080"
#    depends_on:
#      - mysql
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/BloodBank
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: HA1256ri#
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#
#volumes:
#  mysql-data:
version: '3.8'

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_DATABASE: BloodBank
      MYSQL_USER: root
      MYSQL_PASSWORD: HA1256ri#
      MYSQL_ROOT_PASSWORD: HA1256ri#
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  app:
    build: .
    container_name: spring_app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/BloodBank
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: HA1256ri#
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      mysql:
        condition: service_healthy   # Wait until MySQL is healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      retries: 10
      timeout: 10s
      start_period: 60s

volumes:
  mysql-data:
